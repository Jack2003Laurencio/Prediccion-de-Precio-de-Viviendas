import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Cargar el dataset
url = 'Viviendas16.csv'  # Ruta correcta al archivo CSV
df = pd.read_csv(url)

# Separar las características y la variable objetivo
X = df.drop(['Precio'], axis=1)  # Características
y = df['Precio']  # Variable objetivo

# Normalizar las características
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Dividir los datos en conjuntos dec entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Definir el modelo de red neuronal
model = Sequential()
model.add(Dense(64, activation='relu', input_shape=(X_train.shape[1],)))
model.add(Dense(32, activation='relu'))
model.add(Dense(16, activation='relu'))
model.add(Dense(8, activation='relu'))
model.add(Dense(4, activation='relu'))
model.add(Dense(1))

# Compilar el modelo
model.compile(optimizer='adam', loss='mean_squared_error')

# Entrenar el modelo
model.fit(X_train, y_train, epochs=1500, batch_size=32, verbose=0)

# Función para predecir el precio de una vivienda con requisitos dados por el usuario
def predecir_precio(requisitos_usuario):
    requisitos_usuario_scaled = scaler.transform([requisitos_usuario])
    precio_predicho = model.predict(requisitos_usuario_scaled)
    return precio_predicho[0][0]
